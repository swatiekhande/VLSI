entity shift2 is
    Port ( mode : in STD_LOGIC_VECTOR (1 downto 0);
           clk : in STD_LOGIC;
           rst : in STD_LOGIC;
           si, load : in STD_LOGIC;
           pi : in STD_LOGIC_VECTOR (3 downto 0);
           po : out STD_LOGIC_VECTOR (3 downto 0);
           so : out STD_LOGIC);
end shift2;

architecture Behavioral of shift2 is

signal temp: std_logic_vector (3 downto 0);

begin
process(clk, rst)

begin
if(rst = '1') then
SO <= '0';
PO <= "0000";
temp<="0000";

elsif(clk' event and clk='1') then
case mode is
when "00" => 
PO <= PI;

when "01" => 
temp(3) <= SI;
temp(2) <= temp(3);
temp(1) <= temp(2);
temp(0) <= temp(1);
SO <= temp(0);

when "10" => 
if load='1' then 
temp <= PI;
else
temp(2) <= temp(3);
temp(1) <= temp(2);
temp(0) <= temp(1);
SO <= temp(0);
end if;
when others => 
if load='0' then 
temp(3) <= SI;
temp(2) <= temp(3);
temp(1) <= temp(2);
temp(0) <= temp(1);
else
PO<=temp;
end if;
end case;
end if;
end process;

end Behavioral;

Test Bench
entity TESTBS is
--  Port ( );
end TESTBS;

architecture Behavioral of TESTBS is
component shift2
Port ( clk,rst,load,si: in STD_LOGIC;
pi : in STD_LOGIC_VECTOR (3 downto 0); 
po : out STD_LOGIC_VECTOR (3 downto 0); 
mode: in STD_LOGIC_VECTOR (1 downto 0); 
so : out STD_LOGIC);
end component shift2;
signal clk,rst,load,si: STD_LOGIC;
signal pi :STD_LOGIC_VECTOR (3 downto 0); 
signal po:STD_LOGIC_VECTOR (3 downto 0); 
signal mode:STD_LOGIC_VECTOR (1 downto 0);
signal so :STD_LOGIC;

constant clk_period: time:= 10 nS;
begin
uut: shift2 port map(
pi=>pi,
si=>si,
clk=>clk,
rst=>rst,
mode=>mode,
load=>load,
po=>po,
so=>so);
process
begin
clk<='0';
wait for clk_period/2;
clk<='1';
wait for clk_period/2;
end process;
process
begin
rst<='1';
wait for 10 ns;
rst<='0';

mode<="00";
pi<="1001";
wait for 10 ns;

mode<="01";
si<='1';
wait for 10 ns;
si<='0';
wait for 10 ns;
si<='1';
wait for 10 ns;
si<='0';
wait for 50 ns;

mode<="10";
load<='1';
pi<="1010";
wait for 20 ns;
load<='0';
wait for 50 ns;

mode<="11";
load<='0';
wait for 10 ns;
si<='1';
wait for 10 ns;
si<='0';
wait for 10 ns;
si<='1';
wait for 10 ns;
si<='0';
wait for 10 ns;
load<='1';
wait for 20 ns;
end process;
end Behavioral;
